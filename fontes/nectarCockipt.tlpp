#include 'totvs.ch'
#include 'fwmvcdef.ch'
#include 'tlpp-core.th'

user function nectarCockipt( )

	local cAlias    := getNextAlias()
	// Local aCoors    := FWGetDialogSize( oMainWnd )
	// Local oDlg      := nil
	Local oBrowse   := nil

	Local aStruct    := {} //Fields Struct
	Local aColumns   := {} //Browse Columns
	Local aFilter    := {} //Filter Array
	Local nOrder     := 1 //Order
	Local nX         := 0

	public _oBrowseMain := nil

	aStruct := {}
	AAdd(aStruct, { 'NUMREG'    , "N", 12                       , 00                      })
	AAdd(aStruct, { 'ZZY_CODIGO', "C", TamSX3("ZZY_CODIGO")[01] , TamSX3("ZZY_CODIGO")[02]})
	AAdd(aStruct, { 'ZZY_XPROPO', "C", TamSX3("ZZY_XPROPO")[01] , TamSX3("ZZY_XPROPO")[02]})
	AAdd(aStruct, { 'ZZY_CDCLIP', "C", TamSX3("ZZY_CDCLIP")[01] , TamSX3("ZZY_CDCLIP")[02]})//cod
	AAdd(aStruct, { 'ZZY_LJCLIP', "C", TamSX3("ZZY_LJCLIP")[01] , TamSX3("ZZY_LJCLIP")[02]})//loja
	AAdd(aStruct, { 'ZZY_NMCLIP', "C", TamSX3("ZZY_NMCLIP")[01] , TamSX3("ZZY_NMCLIP")[02]})//razão
	AAdd(aStruct, { 'ZZY_XSTATU', "C", TamSX3("ZZY_XSTATU")[01] , TamSX3("ZZY_XSTATU")[02]})//status
	AAdd(aStruct, { 'ZZY_DTATUA', "D", TamSX3("ZZY_DTATUA")[01] , TamSX3("ZZY_DTATUA")[02]})//dt liberação
	AAdd(aStruct, { 'ZZY_NOME'  , "C", TamSX3("ZZY_NOME"  )[01] , TamSX3("ZZY_NOME"  )[02]})
	AAdd(aStruct, { 'ZZY_XDTLIB', 'D', TamSX3("ZZY_XDTLIB")[01] , TamSX3("ZZY_XDTLIB")[02]})
	AAdd(aStruct, { 'ZZY_PEDGER', 'L', TamSX3("ZZY_PEDGER")[01] , TamSX3("ZZY_PEDGER")[02]})

	for nX := 2 to len( aStruct )

		//Columns
		AAdd(aColumns,FWBrwColumn():New())
		aColumns[Len(aColumns)]:SetData( &("{||"+aStruct[nX][1]+"}") )
		aColumns[Len(aColumns)]:SetTitle(RetTitle(aStruct[nX][1]))
		aColumns[Len(aColumns)]:SetSize(aStruct[nX][3])
		aColumns[Len(aColumns)]:SetDecimal(aStruct[nX][4])
		aColumns[Len(aColumns)]:SetPicture(PesqPict("ZZY",aStruct[nX][1]))
		//Filters
		aAdd(aFilter, {aStruct[nX][1], RetTitle(aStruct[nX][1]), TamSX3(aStruct[nX][1])[3],;
			TamSX3(aStruct[nX][1])[1], TamSX3(aStruct[nX][1])[2], PesqPict("ZZY", aStruct[nX][1])} )

	next nX

	//Instance of Temporary Table
	oTempTable := FWTemporaryTable():New()
	//Set Fields
	oTempTable:SetFields(aStruct)
	//Set Indexes
	oTempTable:AddIndex("INDEX1", {"ZZY_XPROPO" } )
	oTempTable:AddIndex("INDEX2", {"ZZY_CODIGO" } )
	oTempTable:AddIndex("INDEX3", {"ZZY_NOME"} )
	//Create
	oTempTable:Create()
	cAliasTmp := oTemptable:GetAlias()

	if select( cAlias ) <> 0

		( cAlias )->( DbCloseArea() )

	end if

	BeginSql alias cAlias

	%noParser%
	
	column ZZY_XDTLIB as Date
	column ZZY_PEDGER as Logical

	SELECT DISTINCT ZZY_CODIGO, ZZY_XPROPO,ZZY_NOME, ZZY_XDTLIB, ZZY_PEDGER,
	ZZY_CDCLIP,	ZZY_LJCLIP, ZZY_NMCLIP, ZZY_XSTATU, ZZY_DTATUA
	FROM %TABLE:ZZY%
	WHERE %NOTDEL%
	AND ZZY_FILIAL = %XFILIAL:ZZY%

	EndSql

	(cAlias)->(DbGoTop())
	While !(cAlias)->(Eof())
		//Add Temporary Table
		If (RecLock(cAliasTMP, .T.))

			(cAliasTMP)->NUMREG      := nOrder

			(cAliasTMP)->ZZY_CODIGO := (cAlias)->ZZY_CODIGO
			(cAliasTMP)->ZZY_XPROPO := (cAlias)->ZZY_XPROPO
			(cAliasTMP)->ZZY_NOME   := (cAlias)->ZZY_NOME
			(cAliasTMP)->ZZY_XDTLIB := (cAlias)->ZZY_XDTLIB
			(cAliasTMP)->ZZY_PEDGER := (cAlias)->ZZY_PEDGER
			(cAliasTMP)->ZZY_CDCLIP := (cAliasTMP)->ZZY_CDCLIP
			(cAliasTMP)->ZZY_LJCLIP := (cAliasTMP)->ZZY_LJCLIP
			(cAliasTMP)->ZZY_NMCLIP := (cAliasTMP)->ZZY_NMCLIP
			(cAliasTMP)->ZZY_XSTATU := (cAliasTMP)->ZZY_XSTATU
			(cAliasTMP)->ZZY_DTATUA := (cAliasTMP)->ZZY_DTATUA

			(cAliasTMP)->(MsUnlock())

		EndIf

		nOrder ++

		(cAlias)->(DBSkip())

	EndDo

	(cAliasTMP)->(DbGoTop())

	// Define MsDialog oDlg Title 'Cockipt' From aCoors[1], aCoors[2] To aCoors[3], aCoors[4] Pixel

	oBrowse := FWMBrowse():New()
	oBrowse:SetDescription( "Oportunidades" )
	oBrowse:SetAlias( cAliasTMP )
	oBrowse:setTemporary(.T.)
	oBrowse:ForceQuitButton()
	oBrowse:SetMenuDef( 'mnuBrwZZY' )

	oBrowse:AddLegend( 'EMPTY( (cAliasTMP)->ZZY_XDTLIB )'                              , 'BLUE' , 'Aguardando Liberação' )
	oBrowse:AddLegend( '(cAliasTMP)->ZZY_PEDGER == .T. .AND. !EMPTY( (cAliasTMP)->ZZY_XDTLIB )', 'GREEN', 'Pedido Gerado'     )
	oBrowse:AddLegend( '(cAliasTMP)->ZZY_PEDGER == .F. .AND. !EMPTY( (cAliasTMP)->ZZY_XDTLIB )', 'RED'  , 'Pedido Não Gerado' )
	oBrowse:DisableReport()
	oBrowse:SetUseFilter(.T.)
	oBrowse:SetColumns(aColumns)
	oBrowse:SetFieldFilter(aFilter)

	oBrowse:SetSeek ( .T.,{;
		{ 'Proposta', { { '', 'C', TamSx3( 'ZZY_XPROPO' )[1], 0, 'ZZY_XPROPO' , "@!", } }, 1, .T. },;
		{ 'Código'  , { { '', 'C', TamSx3( 'ZZY_CODIGO' )[1], 0, 'ZZY_CODIGO' , "@!", } }, 2, .T. },;
		{ 'Nome'    , { { '', 'C', TamSx3( 'ZZY_NOME'   )[1], 0, 'ZZY_NOME'   , "@!", } }, 3, .T. } ;
		} )

	_oBrowseMain := oBrowse

	oBrowse:Activate()

	// ACTIVATE MSDIALOG oDlg CENTERED

	// oFWFilter := oBrowse:FWFilter()
	// oFWFilter:DisableSave(.T.) //Disable Save Button

	//Delete Temporary Table
	oTempTable:Delete()

	( cAlias )->( DbCloseArea() )

return

user function showOportunidade( )

	Local aCoors       := FWGetDialogSize( oMainWnd )
	Local oDlgPrinc    := nil
	Local oPanelUp     := nil
	Local oPanelDown   := nil
	Local oBrowseUp    := nil
	Local oBrowseDown  := nil
	Local oFWLayer     := FWLayer():New()
	Local oBrwRelation := FWBrwRelation():New()

	Define MsDialog oDlgPrinc Title 'Cockipt' From aCoors[1], aCoors[2] To aCoors[3], aCoors[4] Pixel

	oFWLayer:Init( oDlgPrinc, .F., .T. )

	oFWLayer:AddLine( 'UP', 50, .F. )
	oFWLayer:AddCollumn( 'ALL', 100, .T., 'UP' )
	oPanelUp := oFWLayer:GetColPanel( 'ALL', 'UP' )

	oFWLayer:AddLine( 'DOWN', 50, .F. )
	oFWLayer:AddCollumn( 'ALL' , 100, .T., 'DOWN' )
	oPanelDown := oFWLayer:GetColPanel( 'ALL', 'DOWN' )

	oBrowseUp := _oBrowseUp := FWMarkBrowse():New()
	oBrowseUp:SetSemaphore(.T.)
	oBrowseUp:SetOwner( oPanelUp )
	oBrowseUp:SetDescription( "Oportunidades" )
	oBrowseUp:SetAlias( 'ZZY' )

	oBrowseUp:SetFilterDefault( 'ZZY->ZZY_CODIGO == (cAliasTMP)->ZZY_CODIGO' )

	oBrowseUp:DisableReport()

	oBrowseUp:SetFieldMark( 'ZZY_OK' )
	oBrowseUp:SetAfterMark({||afterMark(),oBrowseUp:Refresh(.F.)})
	oBrowseUp:SetAllMark( {|| .T. } )
	oBrowseUp:setValid( { || validMark() } )

	oBrowseUp:AddLegend( 'EMPTY( ZZY->ZZY_XDTLIB )'                              , 'BLUE' , 'Aguardando Liberação' )
	oBrowseUp:AddLegend( 'ZZY->ZZY_PEDGER == .T. .AND. !EMPTY( ZZY->ZZY_XDTLIB )', 'GREEN', 'Pedido Gerado'        )
	oBrowseUp:AddLegend( 'ZZY->ZZY_PEDGER == .F. .AND. !EMPTY( ZZY->ZZY_XDTLIB )', 'RED'  , 'Pedido Não Gerado'    )

	oBrowseUp:DisableDetails()
	oBrowseUp:ForceQuitButton()
	oBrowseUp:SetMenuDef( 'mnuCockpitZZY' ) // Define de onde virao os botoes deste browse
	oBrowseUp:SetProfileID( '1' ) // identificador (ID) para o Browse
	oBrowseUp:Activate()

	oBrowseDown := FWmBrowse():New()
	oBrowseDown:SetOwner( oPanelDown )
	oBrowseDown:SetDescription( 'Itens Pedido de Venda' )
	oBrowseDown:SetAlias( 'SC6' )
	oBrowseDown:SetFilterDefault( "!EMPTY(SC6->C6_XOPORTU)" )
	oBrowseDown:DisableReport()

	oBrowseDown:AddLegend( 'SC6->( C6_QTDENT == 0 )'         , 'GREEN' , 'Não Faturado'          )
	oBrowseDown:AddLegend( 'SC6->( C6_QTDVEN > C6_QTDENT )'  , 'YELLOW', 'Parcialmente Faturado' )
	oBrowseDown:AddLegend( 'SC6->( C6_QTDVEN == C6_QTDENT )' , 'RED'   , 'Totalmente Faturado'   )

	oBrowseDown:DisableDetails()
	oBrowseDown:SetMenuDef( '' ) // Referencia vazia para que nao exiba nenhum botão
	oBrowseDown:SetProfileID( '2' )
	oBrowseDown:Activate()

	oBrwRelation:AddRelation( oBrowseUp, oBrowseDown, {;
		{ 'C6_FILIAL'  , 'xFilial("ZZY" )' } ,;
		{ 'C6_XOPORTU' , 'ZZY_CODIGO'      } ,;
		{ 'C6_XITOPOR' , 'ZZY_ITEM'        } } )

	oBrwRelation:Activate()

	ACTIVATE MSDIALOG oDlgPrinc CENTERED

return

static function validMark()

	if ZZY->ZZY_PEDGER

		apMsgStop( 'A oportunidade já teve o pedido de venda gerado.', 'Atenção !!!' )

		allUnMark( ZZY->ZZY_CODIGO, .F. )

		return .F.

	end if

	if ! ZZY->ZZY_CLICMP

		apMsgStop( 'O contato não foi compatibilizado.', 'Atenção !!!' )

		allUnMark( ZZY->ZZY_CODIGO, .F. )

		return .F.

	end if

	if empty( ZZY->ZZY_XDTLIB )

		apMsgStop( 'Oportunidade não liberada.', 'Atenção !!!' )

		allUnMark( ZZY->ZZY_CODIGO, .F. )

		return .F.

	end if

return .T.

static function afterMark()

	Local aArea         := getArea()
	Local cOportunidade := ZZY->ZZY_CODIGO
	Local cSeek         := xFilial( 'ZZY' ) + cOportunidade
	Local cMark         := ZZY->ZZY_OK

	ZZY->( dbGotop() )

	ZZY->( msSeek( cSeek ) )

	do while ZZY->( !EOF() .And. ZZY_FILIAL + ZZY_CODIGO == cSeek )

		if validMark()

			RecLock( 'ZZY', .F. )
			ZZY->ZZY_OK := cMark
			ZZY->( MsUnlock() )

			ZZY->( dbSkip() )

		else

			exit

		end if

	end do

	restArea( aArea )

return

static function allUnMark( cOportunidade, lMark )

	Local aArea         := getArea()
	Local cSeek         := xFilial( 'ZZY' ) + cOportunidade
	Local cMark         := ZZY->ZZY_OK

	ZZY->( dbGotop() )

	ZZY->( msSeek( cSeek ) )

	do while ZZY->( !EOF() .And. ZZY_FILIAL + ZZY_CODIGO == cSeek )

		RecLock( 'ZZY', .F. )
		ZZY->( ZZY_OK := if( lMark, cMark, space( len( ZZY_OK ) ) ) )
		ZZY->( MsUnlock() )

		ZZY->( dbSkip() )

	end do

	restArea( aArea )

return
